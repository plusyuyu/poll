import axios from '../axios'
// 课调仓库
export default {
	//初始状态
	state:{
		//课调信息
		surveyInfo:null,
		//所有的答卷信息
		choices:[]
	},
	//获取器
	getters:{
		choices:state=>state.choices,
		surveyInfo:state=>state.surveyInfo,
	},
	//突变
	mutations:{
		alterChoicesData(state,data){
			state.choices = data;
		},
		alterSurveyInfoData(state,data){
			state.surveyInfo = data;
		},
	},
	//动作
	actions:{
		//通过课调id获取答卷信息
		findChoiceBySurveyId(context,row){
			//这里是课调的信息，包括id，教师，问卷模板之类的
			context.commit('alterSurveyInfoData',row);
			return new Promise((resolve,reject)=>{
				axios.post("/manager/XXX.action", {id: row.id}).then(({data})=>{
					context.commit('alterChoicesData',data);
					resolve(data);
				}).catch((error)=>{
					reject(error);
				});
			});
		},
		//查看课调进度
		/*showSchedule(context,ids){
			return new Promise((resolve,reject)=>{
				axios.post("/manager/showSchedule.action", {id: ids}).then(({data})=>{
					resolve(data);
				}).catch((error)=>{
					reject(error);
				});
			});
		},
		//开启课调
		openSurvey(context,ids){
			return new Promise((resolve,reject)=>{
				axios.post("/manager/openSurvey.action", {id: ids}).then(()=>{
					resolve();
				}).catch((error)=>{
					reject(error);
				});
			});
		},
		// 结束课调
		endSurvey(context,ids){
			return new Promise((resolve,reject)=>{
				axios.post("/manager/endSurvey.action", {id: ids}).then(()=>{
					resolve();
				}).catch((error)=>{
					reject(error);
				});
			});
		},
		finsAllClassesLiuyr(context){
			return new Promise((resolve,reject)=>{
				axios.get('/manager/queryClass.action').then(({data})=>{
					for(var i=0;i<data.length;i++){
						var chargeArr=data[i].charge.split("%");
						var departmentArr=data[i].department.split("%");
						data[i].charge={
							id:chargeArr[1],
							name:chargeArr[0]
						};
						data[i].department={
							id:departmentArr[1],
							name:departmentArr[0]
						}
					}
					context.commit('alterClassesLiuyrData',data);
					resolve();
				}).catch((error)=>{
					reject(error);
				});
			});
		},
		finsAllCoursesLiuyr(context){
			return new Promise((resolve,reject)=>{
				axios.get('/manager/queryCourses.action').then(({data})=>{
					context.commit('alterCoursesLiuyrData',data);
					resolve();
				}).catch((error)=>{
					reject(error);
				});
			});
		},
		// 查找所有的课调信息
		findAllSurveys(context){
			return new Promise((resolve,reject)=>{
				axios.get('/manager/querySurvey.action').then(({data})=>{
					context.commit('alterSurveysData',data);
					resolve();
				}).catch((error)=>{
					reject(error);
				});
			});
		},
		//保存课调信息
		saveSurveys(context,form){
			//将form封装成后台需要的数据格式
			var sur = {};
		    for (var key in form) {
		    	// 查看form表单的数据，封装之后传给后台 teacherid  courseid   clazzid questionnaireid
		    	if(key==='teacherid' | key==='clazzid' | key==='courseid' | key==='questionnaireid'){
	        		sur[key] = form[key];
	        	}else{
	        		sur['survey.' + key] = form[key];
	        	}
		    }
			return new Promise((resolve,reject)=>{
				axios.post('/manager/createSurvey.action',sur).then(()=>{
					resolve();
				}).catch((error)=>{
					reject(error);
				});
			});
		},
		batchDeleteSurveys(context,ids){
			return new Promise((resolve,reject)=>{
				axios.post("/manager/batchDelSurvey.action", {ids: ids}).then(()=>{
					resolve();
				}).catch((error)=>{
					reject(error);
				});
			});
		}*/
	}
}





